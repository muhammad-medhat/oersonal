/* Button */

input[type="submit"],
input[type="reset"],
input[type="button"],
.button {
  @include vendor("appearance", "none");
  @include vendor(
    "transition",
    (
      "background-color #{_duration(transition)} ease-in-out",
      "color #{_duration(transition)} ease-in-out",
      "border-color #{_duration(transition)} ease-in-out"
    )
  );
  background-color: transparent;
  border-radius: _size(border-radius);
  border: solid 3px _palette(border);
  color: _palette(fg-bold) !important;
  cursor: pointer;
  display: inline-block;
  font-weight: _font(weight-bold);
  height: 3.15em;
  height: calc(2.75em + 6px);
  line-height: 2.75em;
  min-width: 10em;
  padding: 0 1.5em;
  text-align: center;
  text-decoration: none;
  white-space: nowrap;

  &:hover {
    border-color: _palette(accent1, fg);
    color: _palette(fg-bold) !important;
    // color: _palette(accent1, bg) !important;
  }

  &:active {
    background-color: transparentize(_palette(accent1, fg-light), 0.9);
    border-color: _palette(accent1, fg-light);
    color: _palette(accent1, fg-light) !important;
  }

  &.icon {
    padding-left: 1.35em;

    &:before {
      margin-right: 0.5em;
    }
  }

  &.fit {
    min-width: 0;
    width: 100%;
  }

  &.small {
    font-size: 0.8em;
  }

  &.large {
    font-size: 1.35em;
  }

  &.primary {
    background-color: _palette(accent1, bg);
    border-color: _palette(accent1, bg);
    color: _palette(accent1, fg-bold) !important;

    &:hover {
      background-color: lighten(_palette(accent1, bg), 5);
      border-color: lighten(_palette(accent1, bg), 5);
    }

    &:active {
      background-color: darken(_palette(accent1, bg), 5);
      border-color: darken(_palette(accent1, bg), 5);
    }
  }

  &.disabled,
  &:disabled {
    background-color: _palette(border2-bg) !important;
    border-color: _palette(border2-bg) !important;
    color: _palette(fg-light) !important;
    cursor: default;
  }
}
